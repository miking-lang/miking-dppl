#+title: RootPPL Tutorial
#+author: Viktor Senderov
(require 'org-tree-slide)
(global-set-key (kbd "<f8>") 'org-tree-slide-mode)
(global-set-key (kbd "S-<f8>") 'org-tree-slide-skip-done-toggle)

* RootPPL system requirements and installation
** gcc: for CPU and OMP
#+BEGIN_SRC sh :results verbatim :exports both 
gcc --version
#+END_SRC
#+RESULTS:
: gcc (Ubuntu 8.4.0-4ubuntu1) 8.4.0
: Copyright (C) 2018 Free Software Foundation, Inc.
: This is free software; see the source for copying conditions.  There is NO
: warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
: 
** Nvidia driver and CUDA toolkit
#+BEGIN_SRC sh :results verbatim :exports both
nvcc --version
#+END_SRC
#+RESULTS:
: nvcc: NVIDIA (R) Cuda compiler driver
: Copyright (c) 2005-2019 NVIDIA Corporation
: Built on Wed_Oct_23_19:24:38_PDT_2019
: Cuda compilation tools, release 10.2, V10.2.89
* Compiling a simple model
** CPU
#+BEGIN_SRC sh :results verbatim :exports both 
DIR=/home/viktor/ownCloud/miking-dppl/rootppl
THREADS=32
cd $DIR
make clean
make model=models/airplane/airplane.cu -j$THREADS
#+END_SRC

#+RESULTS:
#+begin_example
rm out/*.o program
g++ -c -I. -xc++ -std=c++14 -O3  models/airplane/airplane.cu -o out/model.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/smc.cu -o out/smc.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/smc_nested.cu -o out/smc_nested.o
g++ -c -I. -xc++ -std=c++14 -O3  dists/dists.cu -o out/dists.o
g++ -c -I. -xc++ -std=c++14 -O3  dists/scores.cu -o out/scores.o
g++ -c -I. -xc++ -std=c++14 -O3  dists/delayed.cu -o out/delayed.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/particles_memory_handler.cu -o out/particles_memory_handler.o
g++ -c -I. -xc++ -std=c++14 -O3  utils/misc.cu -o out/misc.o
g++ -c -I. -xc++ -std=c++14 -O3  utils/math.cu -o out/math.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/smc_kernels.cu -o out/smc_kernels.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/resample/common.cu -o out/systematic_common.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/resample/systematic/systematic_cpu.cu -o out/systematic_seq.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/resample/systematic/systematic_gpu.cu -o out/systematic_parallel.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/resample/systematic/kernels.cu -o out/systematic_kernels.o
g++ -c -I. -xc++ -std=c++14 -O3  inference/smc/file_handler.cu -o out/file_handler.o
g++ -std=c++14 -O3  out/*.o -o program
rm out/model.o
#+end_example
** OMP
#+BEGIN_SRC sh :results verbatim :exports both 
DIR=/home/viktor/ownCloud/miking-dppl/rootppl
THREADS=32
cd $DIR
make clean
make model=models/airplane/airplane.cu omp -j$THREADS
#+END_SRC

#+RESULTS:
#+begin_example
rm out/*.o program
# g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp  -o openmpflag
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp models/airplane/airplane.cu -o out/model.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/smc.cu -o out/smc.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/smc_nested.cu -o out/smc_nested.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp dists/dists.cu -o out/dists.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp dists/scores.cu -o out/scores.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp dists/delayed.cu -o out/delayed.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/particles_memory_handler.cu -o out/particles_memory_handler.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp utils/misc.cu -o out/misc.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp utils/math.cu -o out/math.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/smc_kernels.cu -o out/smc_kernels.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/resample/common.cu -o out/systematic_common.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/resample/systematic/systematic_cpu.cu -o out/systematic_seq.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/resample/systematic/systematic_gpu.cu -o out/systematic_parallel.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/resample/systematic/kernels.cu -o out/systematic_kernels.o
g++ -c -I. -xc++ -std=c++14 -O3 -fopenmp inference/smc/file_handler.cu -o out/file_handler.o
g++ -std=c++14 -O3 -fopenmp out/*.o -o program
rm out/model.o
#+end_example
** CUDA
#+BEGIN_SRC sh :results verbatim :exports both 
DIR=/home/viktor/ownCloud/miking-dppl/rootppl
THREADS=32
ARCH=75
cd $DIR
make clean
make model=models/airplane/airplane.cu arch=$ARCH -j$THREADS
#+END_SRC

#+RESULTS:
#+begin_example
rm out/*.o program
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 models/airplane/airplane.cu -o out/model.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/smc.cu -o out/smc.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/smc_nested.cu -o out/smc_nested.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 dists/dists.cu -o out/dists.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 dists/scores.cu -o out/scores.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 dists/delayed.cu -o out/delayed.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/particles_memory_handler.cu -o out/particles_memory_handler.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 utils/misc.cu -o out/misc.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 utils/math.cu -o out/math.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/smc_kernels.cu -o out/smc_kernels.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/resample/common.cu -o out/systematic_common.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/resample/systematic/systematic_cpu.cu -o out/systematic_seq.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/resample/systematic/systematic_gpu.cu -o out/systematic_parallel.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/resample/systematic/kernels.cu -o out/systematic_kernels.o
nvcc -c -I. -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 inference/smc/file_handler.cu -o out/file_handler.o
nvcc -std=c++14 -arch=sm_75 -rdc=true -lcudadevrt -O3 out/*.o -o program
rm out/model.o
#+end_example
* Running the program
** make run N=$N
#+BEGIN_SRC sh :results verbatim :exports both 
DIR=/home/viktor/ownCloud/miking-dppl/rootppl
N=10000
cd $DIR
make run N=$N
#+END_SRC

#+RESULTS:
: ./program 10000
: log normalization constant = -113.689881
: Num particles close to target: 90.24%, MinX: 46.6554, MaxX: 88.8907
** ./program $N $R
#+BEGIN_SRC sh :results verbatim :exports both 
DIR=/home/viktor/ownCloud/miking-dppl/rootppl
N=10000
R=5
cd $DIR
./program $N $R
#+END_SRC

#+RESULTS:
#+begin_example
log normalization constant = -118.095035
Num particles close to target: 97.87%, MinX: 53.2912, MaxX: 84.579
log normalization constant = -118.001883
Num particles close to target: 97.32%, MinX: 54.9541, MaxX: 85.4199
log normalization constant = -118.061601
Num particles close to target: 97.5%, MinX: 56.1771, MaxX: 84.9949
log normalization constant = -117.944138
Num particles close to target: 97.37%, MinX: 56.845, MaxX: 85.8045
log normalization constant = -118.040418
Num particles close to target: 97.57%, MinX: 55.5028, MaxX: 84.62
#+end_example
** 
** 
* sample program
floating_t lambda = SAMPLE(gamma, k, theta);
    
    OBSERVE(exponential, lambda, observedTime);
    
    PSTATE = lambda;
